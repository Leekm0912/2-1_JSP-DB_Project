<%@ page contentType="text/html; charset=utf-8"%>
<%@ page import="java.sql.*"%>
<%@ page import="java.io.*"%>
<%@ page import="java.sql.CallableStatement"%>
<%@ page import="java.util.*"%>
<%@ page import="java.text.DecimalFormat"%>
<%@ page import="java.text.SimpleDateFormat"%>
<%@ page import="java.util.Date"%>
<%@ taglib prefix="c" uri="http://java.sun.com/jsp/jstl/core"%>
<%
		System.out.println(session.getAttribute("userType").toString())
		if(session.getAttribute("userType").toString() == "매수자"){
			PrintWriter script = response.getWriter();
			script.println("<script>");
			
			script.println("alert('매수자는 매도할 수 없습니다.')");
		
			script.println("history.back()");
		
			script.println("</script>");
		}
		request.setCharacterEncoding("utf-8");
		Connection con = null;
		String url = "jdbc:oracle:thin:@localhost:1521:orcl";
		/* 11g express edition은 orcl 대신 XE를 입력한다. */
		String userid = "MYDB";
		String pwd = "dongsu14";

		try { /* 드라이버를 찾는 과정 */
			Class.forName("oracle.jdbc.driver.OracleDriver");
			System.out.println("드라이버 로드 성공");
		} catch (ClassNotFoundException e) {
			e.printStackTrace();
		}

		try { /* 데이터베이스를 연결하는 과정 */
			System.out.println("데이터베이스 연결 준비 ...");
			con = DriverManager.getConnection(url, userid, pwd);
			System.out.println("데이터베이스 연결 성공");
		} catch (SQLException e) {
			e.printStackTrace();
		}
		
		SimpleDateFormat timeformat = new SimpleDateFormat ( "yyyy-MM-dd");
		Date time = new Date();
		int count = -1;
		String query = "select count(매물등록번호) from 상세매물"; /* SQL 문 */
		try { /* 데이터베이스에 질의 결과를 가져오는 과정 */
			Statement stmt = con.createStatement();
			ResultSet rs = stmt.executeQuery(query);
			
			while (rs.next()) {
				count = rs.getInt(1);
			}
		} catch (SQLException e) {
			e.printStackTrace();
		}
		
		//query = "exec 매물삽입(" + ++count + ",'" + timeformat.format(time) +"',"+ request.getParameter("id") +",'"+ request.getParameter("address") +"',"+ request.getParameter("price") +")"; /* 미리 만들어놓은 프로시저 이용 */
		
		query = "insert into 매물 values(?,?,?,?,?)";
		try { /* 데이터베이스에 질의 결과를 가져오는 과정 */
			PreparedStatement ppst = null;
			ppst = con.prepareStatement(query); // PreparedStatement 객체 생성(쿼리 생성)
			ppst.setString(1, Integer.toString(++count));
			ppst.setString(2, timeformat.format(time));
			ppst.setString(3, request.getParameter("address"));
			ppst.setString(4, request.getParameter("price"));
			ppst.setString(5, session.getAttribute("userID").toString());
			ppst.executeUpdate(); // 쿼리(sql) 실행
		} catch (SQLException e) {
			e.printStackTrace();
		}

		con.close();
		response.sendRedirect("ViewTable.jsp");
		%>
		
		